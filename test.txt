// useEffect(() => {
  //   // Kh·ªüi t·∫°o b·∫£n ƒë·ªì
  //   const map = L.map(id || "leaflet-map", {
  //     center: lat && lng ? [lat, lng] : defaultCenter,
  //     // layers: [street],
  //     zoom: defaultZoom,
  //     zoomControl: enableZoom,
  //   });
  //   // C·∫•u h√¨nh ·ªü ƒë√¢y do g·ªçi api nhi·ªÅu l·∫ßn ƒë·ªÉ v·∫Ω n√≥ xu·∫•t n·ªÅn x√°m ho·∫∑c kh√¥ng t·∫£i ·∫£nh
  //   L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
  //     maxZoom: 19,
  //     attribution: "&copy; OpenStreetMap contributors",
  //   }).addTo(map);

  //   // B·ªô ch·ªçn l·ªõp n·ªÅn
  //   if (enableBaseLayers) {
  //     const baseMaps = {
  //       "B·∫£n ƒë·ªì tr·∫Øng": light,
  //       "B·∫£n ƒë·ªì ƒë∆∞·ªùng": street,
  //       "B·∫£n ƒë·ªì v·ªá tinh": satellite,
  //       "B·∫£n ƒë·ªì t·ªëi": dark,
  //       "B·∫£n ƒë·ªì ƒë·ªãa h√¨nh": topo,
  //     };
  //     L.control.layers(baseMaps).addTo(map);
  //   }

  //   // Thanh t√¨m ki·∫øm
  //   if (enableSearch) {
  //     (L.Control as any)
  //       .geocoder({ defaultMarkGeocode: false })
  //       .on("markgeocode", (e: any) => {
  //         const latlng = e.geocode.center;
  //         map.setView(latlng, 15);
  //         L.marker(latlng)
  //           .addTo(map)
  //           .bindPopup(`<b>${e.geocode.name}</b>`)
  //           .openPopup();
  //       })
  //       .addTo(map);
  //   }

  //   // Ch·ªçn icon theo lo·∫°i ƒëi·ªÉm
  //   const getIconByType = (pointType?: string): Icon => {
  //     if (pointType === PointTypeValue.school) {
  //       return L.icon({
  //         iconUrl: "https://cdn-icons-png.flaticon.com/512/167/167707.png",
  //         iconSize: [40, 40],
  //         iconAnchor: [20, 40],
  //         popupAnchor: [0, -40],
  //       });
  //     }
  //     if (pointType === PointTypeValue.pickup) {
  //       return L.icon({
  //         iconUrl: "https://cdn-icons-png.flaticon.com/512/6395/6395324.png",
  //         iconSize: [40, 40],
  //         iconAnchor: [20, 40],
  //         popupAnchor: [0, -40],
  //       });
  //     }
  //     if (pointType === PointTypeValue.bus) {
  //       return L.icon({
  //         iconUrl: "https://cdn-icons-png.flaticon.com/512/1068/1068580.png",
  //         iconSize: [40, 40],
  //         iconAnchor: [20, 40],
  //         popupAnchor: [0, -40],
  //       });
  //     }
  //     // Icon m·∫∑c ƒë·ªãnh
  //     return L.icon({
  //       iconUrl: "https://cdn-icons-png.flaticon.com/512/854/854878.png",
  //       iconSize: [30, 30],
  //       iconAnchor: [15, 30],
  //       popupAnchor: [0, -30],
  //     });
  //   };

  //   // N·∫øu c√≥ s·∫µn to·∫° ƒë·ªô, ƒë√°nh d·∫•u ƒëi·ªÉm
  //   let marker: L.Marker | null = null;
  //   if (lat && lng) {
  //     marker = L.marker([lat, lng], { icon: getIconByType(pointType) })
  //       .addTo(map)
  //       .bindPopup(
  //         `<b>${pointType || "T·ªça ƒë·ªô"}</b><br>${lat.toFixed(6)}, ${lng.toFixed(
  //           6
  //         )}`
  //       )
  //       .openPopup();
  //   }

  //   // N·∫øu c√≥ routeDetails, hi·ªÉn th·ªã t·∫•t c·∫£ ƒëi·ªÉm v√† ƒë∆∞·ªùng ƒëi th·ª±c t·∫ø
  //   if (routeDetails && routeDetails.length > 0) {
  //     const sortedRoute = [...routeDetails].sort((a, b) => a.order! - b.order!);

  //     // L·∫•y danh s√°ch coordinates cho API ORS [lng, lat]
  //     const coordinates: [number, number][] = sortedRoute.map((item) => [
  //       item.pickup!.lng!,
  //       item.pickup!.lat!,
  //     ]);

  //     // Marker cho t·ª´ng ƒëi·ªÉm
  //     sortedRoute.forEach((item) => {
  //       const { id, name, category, lat, lng } = item.pickup!;
  //       L.marker([lat!, lng!], { icon: getIconByType(category) })
  //         .addTo(map)
  //         .bindPopup(
  //           `<b style="font-size: 0.9rem;font-weight: 500;">${name}</b><br>- Lo·∫°i tr·∫°m: ${category}<br>- To·∫° ƒë·ªô x:${lat}<br>- To·∫° ƒë·ªô y:${lng}`
  //         )
  //         .addEventListener("click", async () => {
  //           if (handleSelectedPickup) {
  //             const info = await getLocationInfo(lat!, lng!);
  //             handleSelectedPickup({ id: id, lat: lat, lng: lng, info: info });
  //           }
  //         });
  //     });

  //     // G·ªçi API ORS ƒë·ªÉ l·∫•y ƒë∆∞·ªùng ƒëi (d·∫°ng JSON thay v√¨ GEOJSON)
  //     fetch("https://api.openrouteservice.org/v2/directions/driving-car/json", {
  //       method: "POST",
  //       headers: {
  //         Authorization: apiKeySelected,
  //         "Content-Type": "application/json",
  //       },
  //       body: JSON.stringify({ coordinates }),
  //     })
  //       .then((res) => res.json())
  //       .then((data) => {
  //         const route = data.routes[0];
  //         const totalDistance = route.summary.distance; // m√©t
  //         const totalDuration = route.summary.duration; // gi√¢y

  //         // Gi·∫£i m√£ geometry ƒë·ªÉ v·∫Ω ƒë∆∞·ªùng
  //         const geometry = route.geometry;
  //         const decoded = polyline.decode(geometry);
  //         L.polyline(decoded, { color: "blue", weight: 4, opacity: 0.6 }).addTo(
  //           map
  //         );

  //         // Zoom map v·ª´a t·∫•t c·∫£ c√°c ƒëi·ªÉm
  //         const latlngs = sortedRoute.map(
  //           (item) => [item.pickup!.lat!, item.pickup!.lng!] as L.LatLngTuple
  //         );
  //         const bounds = L.latLngBounds(latlngs);
  //         map.fitBounds(bounds, { padding: [50, 50] });

  //         // T·∫°o block hi·ªÉn th·ªã th√¥ng tin tuy·∫øn ƒë∆∞·ªùng
  //         const infoBlock = new L.Control({ position: "bottomleft" });
  //         infoBlock.onAdd = (map) => {
  //           const div = L.DomUtil.create("div", "info-block"); // class CSS l√† info-block
  //           div.innerHTML = `
  //   <p class="title">Th√¥ng tin tuy·∫øn ƒë∆∞·ªùng</p>
  //   <p class="description">- T·ªïng qu√£ng ƒë∆∞·ªùng: <b>${totalDistance} m</b></p>
  //   <p class="description">- Th·ªùi gian d·ª± ki·∫øn: <b>${totalDuration} s</b></p>
  // `;
  //           return div;
  //         };
  //         infoBlock.addTo(map);

  //         handleGetRouteInfo!({
  //           distance: totalDistance,
  //           duration: totalDuration,
  //         });
  //       })
  //       .catch((err) => console.error(err));
  //   }

  //   // N·∫øu c√≥ nhi·ªÅu tuy·∫øn (routeDetailsList), hi·ªÉn th·ªã t·∫•t c·∫£
  //   if (routeDetailsList && routeDetailsList.length > 0) {
  //     routeDetailsList.forEach((routeDetailItem, index) => {
  //       const sortedRoute = [...routeDetailItem.routeDetails].sort(
  //         (a, b) => a.order! - b.order!
  //       );

  //       // L·∫•y danh s√°ch coordinates cho API ORS [lng, lat]
  //       const coordinates: [number, number][] = sortedRoute.map((item) => [
  //         item.pickup!.lng!,
  //         item.pickup!.lat!,
  //       ]);

  //       // Marker cho t·ª´ng ƒëi·ªÉm trong tuy·∫øn
  //       sortedRoute.forEach((item) => {
  //         const { id, name, category, lat, lng } = item.pickup!;
  //         L.marker([lat!, lng!], { icon: getIconByType(category) })
  //           .addTo(map)
  //           .bindPopup(
  //             `<b style="font-size: 0.9rem;font-weight: 500;">${name}</b><br>
  //       - Lo·∫°i tr·∫°m: ${category}<br>
  //       - To·∫° ƒë·ªô x:${lat}<br>
  //       - To·∫° ƒë·ªô y:${lng}`
  //           )
  //           .addEventListener("click", async () => {
  //             if (handleSelectedPickup) {
  //               const info = await getLocationInfo(lat!, lng!);
  //               handleSelectedPickup({
  //                 id: id,
  //                 lat: lat,
  //                 lng: lng,
  //                 info: info,
  //               });
  //             }
  //           });
  //       });

  //       // üé® X√°c ƒë·ªãnh m√†u tuy·∫øn theo tr·∫°ng th√°i
  //       const routeColor =
  //         routeDetailItem.status === ActiveStatusValue.success
  //           ? "purple"
  //           : routeDetailItem.status === ActiveStatusValue.running
  //           ? "green"
  //           : routeDetailItem.status === ActiveStatusValue.incident
  //           ? "red"
  //           : "gray";

  //       // G·ªçi API ORS ƒë·ªÉ l·∫•y ƒë∆∞·ªùng ƒëi (JSON ho·∫∑c GEOJSON)
  //       fetch(
  //         "https://api.openrouteservice.org/v2/directions/driving-car/json",
  //         {
  //           method: "POST",
  //           headers: {
  //             Authorization: apiKeySelected,
  //             "Content-Type": "application/json",
  //           },
  //           body: JSON.stringify({ coordinates }),
  //         }
  //       )
  //         .then((res) => res.json())
  //         .then((data) => {
  //           const route = data.routes[0];
  //           const totalDistance = route.summary.distance; // m√©t
  //           const totalDuration = route.summary.duration; // gi√¢y

  //           // Gi·∫£i m√£ geometry ƒë·ªÉ v·∫Ω ƒë∆∞·ªùng ƒëi
  //           const geometry = route.geometry;
  //           const decoded = polyline.decode(geometry);
  //           L.polyline(decoded, {
  //             color: routeColor,
  //             weight: 4,
  //             opacity: 0.7,
  //           }).addTo(map);

  //           // üöç Hi·ªÉn th·ªã xe bu√Ωt n·∫øu c√≥ activePickups
  //           // ...

  //           if (
  //             routeDetailItem.activeId &&
  //             routeDetailItem.busLat &&
  //             routeDetailItem.busLng &&
  //             routeDetailItem.busSpeed
  //           ) {
  //             // üöå Hi·ªÉn th·ªã xe bu√Ωt (∆∞u ti√™n v·ªã tr√≠ hi·ªán t·∫°i n·∫øu c√≥)
  //             let busLat: number | null = null;
  //             let busLng: number | null = null;

  //             // N·∫øu c√≥ d·ªØ li·ªáu v·ªã tr√≠ hi·ªán t·∫°i c·ªßa bus
  //             if (routeDetailItem.busLat && routeDetailItem.busLng) {
  //               busLat = routeDetailItem.busLat;
  //               busLng = routeDetailItem.busLng;
  //             } else {
  //               // N·∫øu ch∆∞a c√≥, l·∫•y tr·∫°m ƒë·∫ßu ti√™n tr√™n tuy·∫øn
  //               const firstPickup = sortedRoute[0].pickup!;
  //               busLat = firstPickup.lat!;
  //               busLng = firstPickup.lng!;
  //             }

  //             if (busLat && busLng) {
  //               const busIcon = L.icon({
  //                 iconUrl:
  //                   "https://cdn-icons-png.flaticon.com/512/1068/1068580.png",
  //                 iconSize: [30, 30],
  //                 iconAnchor: [15, 15],
  //                 popupAnchor: [0, -15],
  //               });

  //               const busMarker = L.marker([busLat, busLng], { icon: busIcon })
  //                 .addTo(map)
  //                 .bindPopup(
  //                   `<b>üöå Xe bu√Ωt</b><br>
  //                     - T·ªça ƒë·ªô: ${busLat.toFixed(6)}, ${busLng.toFixed(6)}<br>
  //                     - V·∫≠n t·ªëc: ${
  //                       routeDetailItem.busSpeed
  //                         ? routeDetailItem.busSpeed + " km/h"
  //                         : "Kh√¥ng x√°c ƒë·ªãnh"
  //                     }`
  //                 )
  //                 .addEventListener("click", () => {
  //                   handleSelectedBus?.({ activeId: routeDetailItem.activeId });
  //                 });

  //               // Gi·∫£ l·∫≠p di chuy·ªÉn d·ª±a tr√™n activePickups
  //               if (
  //                 sortedRoute.length > 1 &&
  //                 activePickups &&
  //                 activePickups.length > 0
  //               ) {
  //                 // X√°c ƒë·ªãnh tr·∫°m hi·ªán t·∫°i d·ª±a tr√™n activePickups
  //                 let currentIndex = sortedRoute.findIndex((r) =>
  //                   activePickups.some(
  //                     (p) =>
  //                       p.pickup?.id === r.pickup?.id &&
  //                       p.status === ActivePickupStatusValue.confirmed
  //                   )
  //                 );
  //                 if (currentIndex === -1) currentIndex = 0; // n·∫øu ch∆∞a c√≥ tr·∫°m n√†o "ƒë√£ ƒë·∫øn"

  //                 const moveInterval = 5000;
  //                 const totalSteps = 5;

  //                 function moveBus() {
  //                   if (currentIndex >= sortedRoute.length - 1) return;

  //                   const start = sortedRoute[currentIndex].pickup!;
  //                   const end = sortedRoute[currentIndex + 1].pickup!;

  //                   // Ki·ªÉm tra tr·∫°m k·∫ø ti·∫øp ƒë√£ "ƒêang ƒë·∫øn tr·∫°m" ch∆∞a
  //                   const isNextDriving = activePickups?.some(
  //                     (p) =>
  //                       p.pickup?.id === end.id &&
  //                       p.status === ActivePickupStatusValue.driving
  //                   );
  //                   if (!isNextDriving) return;

  //                   let step = 0;
  //                   const interval = setInterval(() => {
  //                     step++;
  //                     const lat =
  //                       start.lat! +
  //                       ((end.lat! - start.lat!) * step) / totalSteps;
  //                     const lng =
  //                       start.lng! +
  //                       ((end.lng! - start.lng!) * step) / totalSteps;

  //                     busMarker.setLatLng([lat, lng]);

  //                     // const distance = calDistance(
  //                     //   lat,
  //                     //   lng,
  //                     //   end.lat!,
  //                     //   end.lng!
  //                     // );
  //                     // if (distance > 500) {
  //                     //   console.log(
  //                     //     `‚ö†Ô∏è Xe bu√Ωt ƒëang c√°ch tr·∫°m "${
  //                     //       end.name
  //                     //     }" ${distance.toFixed(0)} m`
  //                     //   );
  //                     // }

  //                     handleGetBusInfo!({activeId: routeDetailItem?.activeId, busLat: lat, busLng: lng});

  //                     if (step >= totalSteps) {
  //                       clearInterval(interval);
  //                       console.log(`‚úÖ ƒê·∫øn tr·∫°m: ${end.name}`);
  //                       currentIndex++;

  //                       // setTimeout(moveBus, 100);
  //                     }
  //                   }, moveInterval);
  //                 }

  //                 moveBus();
  //               }
  //             }
  //           }

  //           // üß≠ Ch·ªâ t·∫°o info-block khi c√≥ **1 tuy·∫øn duy nh·∫•t**
  //           if (routeDetailsList.length === 1) {
  //             const infoBlock = new L.Control({ position: "bottomleft" });
  //             infoBlock.onAdd = (map) => {
  //               const div = L.DomUtil.create("div", "info-block in-tag");
  //               div.innerHTML = `
  //             <p class="title">Th√¥ng tin tuy·∫øn ƒë∆∞·ªùng</p>
  //             <p class="description">- T·ªïng qu√£ng ƒë∆∞·ªùng: <b>${totalDistance.toFixed(
  //               0
  //             )} m</b></p>
  //             <p class="description">- Th·ªùi gian d·ª± ki·∫øn: <b>${totalDuration.toFixed(
  //               0
  //             )} s</b></p>
  //           `;
  //               return div;
  //             };
  //             infoBlock.addTo(map);

  //             handleGetRouteInfo?.({
  //               distance: totalDistance,
  //               duration: totalDuration,
  //             });
  //           }
  //         })
  //         .catch((err) => console.error(err));
  //     });

  //     // Zoom ƒë·ªÉ hi·ªÉn th·ªã to√†n b·ªô tuy·∫øn
  //     const allLatLngs = routeDetailsList.flatMap((routeDetailItem) =>
  //       routeDetailItem?.routeDetails.map(
  //         (item) => [item.pickup!.lat!, item.pickup!.lng!] as L.LatLngTuple
  //       )
  //     );
  //     const bounds = L.latLngBounds(allLatLngs);
  //     map.fitBounds(bounds, { padding: [50, 50] });
  //   }

  //   // N·∫øu l√† ch·∫ø ƒë·ªô "select", cho ph√©p ch·ªçn ƒëi·ªÉm
  //   if (type == "select" && handleSelectedPickup) {
  //     map.on("click", async (e: LeafletMouseEvent) => {
  //       const { lat, lng } = e.latlng;

  //       // Xo√° marker c≈©
  //       if (marker) map.removeLayer(marker);
  //       marker = L.marker([lat, lng], {
  //         icon: getIconByType(pointType),
  //       }).addTo(map);

  //       marker
  //         .bindPopup(
  //           `<b>${pointType || "T·ªça ƒë·ªô"}</b><br>${lat.toFixed(
  //             6
  //           )}, ${lng.toFixed(6)}`
  //         )
  //         .openPopup();

  //       Swal.fire({
  //         icon: "success",
  //         title: "üìç ƒêi·ªÉm ƒë√£ ch·ªçn",
  //         html: `<b>${pointType || "T·ªça ƒë·ªô"}:</b> ${lat.toFixed(
  //           6
  //         )}, ${lng.toFixed(6)}`,
  //         confirmButtonColor: "#0078ff",
  //       });

  //       const info = await getLocationInfo(lat, lng);
  //       handleSelectedPickup({ lat: lat, lng: lng, info: info });
  //     });
  //   }

  //   // N·∫øu l√† ch·∫ø ƒë·ªô "detail", ch·ªâ xem
  //   if (type === "detail") {
  //     map.dragging.enable();
  //     map.doubleClickZoom.enable();
  //     map.scrollWheelZoom.enable();
  //     map.boxZoom.enable();
  //     map.keyboard.enable();
  //   }

  //   return () => {
  //     map.remove();
  //   };
  // }, [
  //   defaultCenter,
  //   defaultZoom,
  //   enableZoom,
  //   enableSearch,
  //   enableBaseLayers,
  //   lat,
  //   lng,
  //   type,
  //   pointType,
  //   routeDetails,
  //   routeDetailsList,
  //   activePickups,
  //   handleGetBusInfo,
  //   handleGetRouteInfo,
  //   handleSelectedPickup,
  //   handleSelectedBus,
  // ]);